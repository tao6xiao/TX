<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trs.gov.kpi.dao.CommonMapper">


    <sql id="where_foreach_field_sql">
        <foreach collection="filter.fieldNames" item="fieldName">
            <if test="condField.fieldName == fieldName">
                <if test="condField.isLike">
                    ${fieldName} like #{condField.condValue}
                </if>
                <if test="condField.isEqual">
                    ${fieldName} = #{condField.condValue}
                </if>
                <if test="condField.isRangeBegin">
                    ${fieldName}
                    <![CDATA[
           >=
          ]]>
                    #{condField.condValue}
                </if>
                <if test="condField.isRangeEnd">
                    ${fieldName}
                    <![CDATA[
                 <=
              ]]>
                    #{condField.condValue}
                </if>
                <if test="condField.isCollection">
                    ${fieldName} in
                    <foreach collection="condField.condValue" index="index" item="item" open="(" separator=","
                             close=")">
                        #{item}
                    </foreach>
                </if>
            </if>
        </foreach>
    </sql>

    <sql id="where_sql">
        <if test="filter.condFields != null">
            AND
            <foreach collection="filter.condFields" item="condField" separator=" AND ">
                <include refid="com.trs.gov.kpi.dao.CommonMapper.where_foreach_field_sql"></include>
                <if test='condField.fieldName == "OR_COMPLEX_FIELD"'>
                    <foreach collection="condField.condValue.fields" index="index" item="condField" open="("
                             separator=" OR " close=")">
                        <include refid="com.trs.gov.kpi.dao.CommonMapper.where_foreach_field_sql"></include>
                    </foreach>
                </if>
            </foreach>
        </if>
    </sql>

    <sql id="order_sql">
        <if test="filter.sortFields != null">
            ORDER BY
            <foreach collection="filter.sortFields" item="sortField" separator=",">
                <foreach collection="filter.fieldNames" item="fieldName">
                    <if test='sortField.fieldName == fieldName'>
                        ${fieldName}
                        <if test="sortField.isAsc">
                            ASC
                        </if>
                        <if test="!sortField.isAsc">
                            DESC
                        </if>
                    </if>
                </foreach>
            </foreach>
        </if>
    </sql>

    <sql id="group_sql">
        <if test="filter.groupFields != null">
            GROUP BY
            <foreach collection="filter.groupFields" item="groupField" separator=",">
                ${groupField}
            </foreach>
        </if>
    </sql>

    <sql id="page_sql">
        <if test="filter.pager != null">
            limit #{filter.pager.offset},#{filter.pager.count}
        </if>
    </sql>

    <sql id="all_conditions_sql">
        <include refid="com.trs.gov.kpi.dao.CommonMapper.where_sql"/>
        <include refid="com.trs.gov.kpi.dao.CommonMapper.group_sql"/>
        <include refid="com.trs.gov.kpi.dao.CommonMapper.order_sql"/>
        <include refid="com.trs.gov.kpi.dao.CommonMapper.page_sql"/>
    </sql>

    <select id="select" resultType="java.util.Map">
        SELECT *
        FROM ${filter.table.name}
        WHERE 1=1
        <include refid="all_conditions_sql"/>
    </select>

    <update id="update" >
        update ${updater.tableName}
        set
        <foreach collection="updater.fields" item="field" separator=",">
            ${field.name} = #{field.value}
        </foreach>
        WHERE 1=1
        <include refid="all_conditions_sql"/>
    </update>

    <insert id="insert" parameterType="com.trs.gov.kpi.entity.dao.DBRow">
        insert into ${tableName}
        <foreach collection="fields" item="fieldName" open="(" separator="," close=")">
            ${fieldName}
        </foreach>
        values
        <foreach collection="values" item="value" open="(" separator="," close=")">
            #{value}
        </foreach>
    </insert>

    <select id="count" parameterType="com.trs.gov.kpi.entity.dao.QueryFilter" resultType="int">
        SELECT  count(*) FROM ${filter.table.tableName}
        WHERE 1=1
        <include refid="all_conditions_sql"/>
    </select>

</mapper>